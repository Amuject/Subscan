"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.at=at,exports.default=void 0,exports.scan=scan;var _fs=_interopRequireDefault(require("fs")),_http=_interopRequireDefault(require("http")),_https=_interopRequireDefault(require("https")),_path=_interopRequireDefault(require("path")),_url=require("url");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const _filename=(0,_url.fileURLToPath)(require("url").pathToFileURL(_filename).toString()),_dirname=_path.default.dirname(_filename),scanURIs=JSON.parse(_fs.default.readFileSync(_path.default.resolve(_dirname,"./data/scan-URIs.json")));async function scan(domain,URIs=scanURIs){const result={error:void 0,domain:domain,subdomains:[]},tasks=[];for(let uri of URIs)uri.match(/^#/)||(uri=uri.replace(/{domain}/g,domain),tasks.push(at(uri,domain)));return new Promise(resolve=>{Promise.all(tasks).then(results=>{for(const rs of results)for(const r of rs)result.subdomains.includes(r)||result.subdomains.push(r);result.subdomains.sort(),resolve(result)}).catch(error=>{result.error=error,resolve(result)})})}async function at(uri,target,method="GET",ua="Sans"){return new Promise(resolve=>{target=encodeURI(target);const regex=new RegExp("([a-zA-Z0-9_-][a-zA-Z0-9_.-]*\\."+target.replace(/\./g,"\\.")+")","ig"),urim=uri.match(/(https?):\/\/([^/]+)(.+)/),proc=urim[1],host=urim[2],path=urim[3],timestamp=new Date().getTime(),subdomains=[];("http"==proc?_http.default:_https.default).request({method:method,host:host,path:path,headers:{"User-Agent":ua}},response=>{let d="";response.on("data",data=>{d+=data.toString()}),response.on("end",()=>{d=d.replace(/(\\n|\\r)/gi," ");const matches=d.match(regex)||[];for(const m of matches)subdomains.includes(m)||subdomains.push(m);resolve(subdomains)})}).on("error",()=>{resolve(subdomains)}).end()})}var _default=scan;exports.default=_default;